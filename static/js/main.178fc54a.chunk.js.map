{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","character","name","height","CardList","characters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","people","setState","results","this","filteredCharacters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,6BAAKD,EAAME,UAAUC,OACrB,6BAAKH,EAAME,UAAUE,aCHdC,EAAW,SAACL,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMM,WAAWC,KAAI,SAACL,GAAD,OACpB,cAAC,EAAD,CAAMA,UAAWA,UCLZM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACET,UAAU,SACVU,KAAK,SACLC,YAAaH,EACbI,SAAUH,MC6BDI,E,kDAhCb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAEDe,MAAQ,CACXT,WAAY,GACZU,YAAa,IALE,E,qDAQnB,WAAqB,IAAD,OAClBC,MAAM,iCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAY,EAAKC,SAAS,CAAEhB,WAAYe,EAAOE,e,oBAGzD,WAAU,IAAD,SAC6BC,KAAKT,MAAjCT,EADD,EACCA,WAAYU,EADb,EACaA,YACdS,EAAqBnB,EAAWoB,QAAO,SAACxB,GAAD,OAC3CA,EAAUC,KAAKwB,cAAcC,SAASZ,EAAYa,wBAEpD,OACE,sBAAK5B,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,+BACA,cAAC,EAAD,CACEQ,YAAY,oBACZC,aAAc,SAACoB,GAAD,OAAO,EAAKR,SAAS,CAAEN,YAAac,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAU1B,WAAYmB,W,GA3BZQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.178fc54a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <h1>{props.character.name}</h1>\n      <h2>{props.character.height}</h2>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { Card } from \"../card/card.component.jsx\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.characters.map((character) => (\n        <Card character={character} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeHolder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeHolder}\n      onChange={handleChange}\n    />\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://swapi.dev/api/people/\")\n      .then((response) => response.json())\n      .then((people) => this.setState({ characters: people.results }));\n  }\n\n  render() {\n    const { characters, searchField } = this.state;\n    const filteredCharacters = characters.filter((character) =>\n      character.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1 className=\"main-title\">Star Wars Rolodex</h1>\n        <SearchBox\n          placeHolder=\"search characters\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList characters={filteredCharacters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}